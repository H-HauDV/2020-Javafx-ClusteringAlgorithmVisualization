@startuml

title __MAINCODE's Class Diagram__\n

  namespace MainCode {
    class MainCode.Controller {
        {static} + MAX_DIVERSITY : int
        {static} + MAX_K : int
        {static} + MAX_OPTIMIXE_G : int
        {static} + NO_OF_NODES : int
        {static} + SPEED : double
        - addPointButton : Button
        - chooseAlgorithmComboBox : ComboBox<AbstractClustering>
        - credit : VBox
        - creditShow : int
        - currentTransition : int
        - customKField : TextField
        - dForGenerate : int
        - delayOfSpeedField : TextField
        - display : Pane
        - diversityForGenerateField : TextField
        - dragTemplateFileTextFiled : TextField
        - dropDragTemplateFileTarget : HBox
        - errorAndWarningLabel : Label
        - forceStopButton : Button
        - hyperLinkGit : Hyperlink
        - k : int
        - loadingParraTrans : ParallelTransition
        - loadingPicPane : Pane
        - nameOfAlgorithm : String
        - nameOfAlgorithmLabel : Label
        - numOfNodes : Label
        - numPointLabel : Label
        - numberPointButton : ComboBox<Integer>
        - optionForCenterPoint : int
        - optionForGenerateField : TextField
        - pauseButton : Button
        - pickByHandButton : Button
        - quitHBox : HBox
        - quitHBoxState : int
        - quitPane : Pane
        - removePointButton : Button
        - resetButton : Button
        - running : boolean
        - setTemplateFileButton : Button
        - show : AnchorPane
        - showCreditButton : Button
        - speedDisplayLabel : Label
        - speedMul : double
        - speedSlider : Slider
        - stArray : ArrayList<SequentialTransition>
        - startButton : Button
        - statusLabel : Label
        - stepByStepNextButton : Button
        - stepByStepOffButton : Button
        - stepByStepOnButton : Button
        - stepByStepState : int
        - stepByStepStateLabel : Label
        - stopPickByHandButton : Button
        - testButton : Button
        + addPointButtonOnAction()
        + checkCustomArgumentBeforeRunning()
        + chooseAlgorithmComboBoxOnAction()
        + creditAnimation()
        + dForGenerateFieldOnEnter()
        + delayOfSpeedFieldOnEnter()
        + forceStopButtonOnAction()
        + hyperLinkGitOnAction()
        + initGridAnimationForDisplay()
        + initQuitPaneAnimation()
        + initSquareAnimationForDisplay()
        + initialize()
        + kFieldOnEnter()
        + optimizeGFieldOnEnter()
        + pauseButtonOnAction()
        + pickByHandButtonOnAction()
        + quitButtonOnAction()
        + removePointButtonOnAction()
        + resetButtonOnAction()
        + resetDisplayAndAlgorithm()
        + selectNumPoint()
        + setButtonStateAfterRunning()
        + setButtonStateBaseOnCondition()
        + setLoadingPicPane()
        + setTemplateFileButtonOnAction()
        + showCreditButtonOnAction()
        + speedSliderOnChange()
        + startButtonOnAction()
        + stepByStepOffButtonOnAction()
        + stepByStepOnButtonOnAction()
        + stepBystepNextButtonOnAction()
        + stopPickByHandButtonOnAction()
        + testButtonOnAction()
    }
  }
  

  namespace MainCode {
    class MainCode.HelpfullFunction {
        {static} + createARandomArrayWithDistinctElementFrom0ToX()
        {static} + getNodesFromFile()
        {static} + getRandomArray()
        {static} + getRandomDoubleInRange()
        {static} + getRandomIntInRange()
        {static} + withMathRound()
    }
  }
  

  namespace MainCode {
    class MainCode.Launcher {
        {static} + main()
    }
  }
  

  namespace MainCode {
    class MainCode.Main {
        {static} + main()
        + start()
    }
  }
  

  MainCode.Controller .up.|> javafx.fxml.Initializable
  MainCode.Controller o-- MainCode.ClusteringAlgorithm.AbstractClustering : abstractClustering
  MainCode.Main -up-|> javafx.application.Application


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
