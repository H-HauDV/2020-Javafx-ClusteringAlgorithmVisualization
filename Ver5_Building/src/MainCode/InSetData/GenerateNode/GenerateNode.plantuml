@startuml

title __GENERATENODE's Class Diagram__\n

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        abstract class MainCode.InSetData.GenerateNode.AbstractGenerateNodes {
            {static} + MAX_X : int
            {static} + MAX_Y : int
            ~ centerPoint : int
            ~ customCenterArea : ArrayList<int[]>
            ~ mutatingPercent : double
            ~ nodesTemp : Node[]
            ~ numNodeForEachCluster : int[]
            ~ number : int
            ~ optionForCenterPoint : int
            ~ radius : double
            {abstract} + customCenterPoint()
            {abstract} + generateNodesSpecific()
            + generateOneNode()
            + getNodeFromGenerateNodes()
            + mutatingDefault()
            {abstract} + mutatingSpecific()
        }
      }
    }
  }
  

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        class MainCode.InSetData.GenerateNode.GenerateCentroids {
            {static} + MAX_X : int
            {static} + MAX_Y : int
            ~ nodesTemp : Node[]
            ~ number : int
            ~ radius : double
            + GenerateCentroids()
            + generateCentroidsForKMeans()
            + generateCentroidsForKNearestNeighbor()
            + generateCentroidsForMeanShift()
            + getCentroids()
        }
      }
    }
  }
  

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        class MainCode.InSetData.GenerateNode.KMeansGenerateNodes {
            + KMeansGenerateNodes()
            + customCenterPoint()
            + generateNodesSpecific()
            + mutatingSpecific()
        }
      }
    }
  }
  

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        class MainCode.InSetData.GenerateNode.KNearestNeighborGenerateNodes {
            + colorForNodes : Color[]
            + KNearestNeighborGenerateNodes()
            + customCenterPoint()
            + generateColorForCluster()
            + generateNodesSpecific()
            + mutatingSpecific()
        }
      }
    }
  }
  

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        class MainCode.InSetData.GenerateNode.MeanShiftGenerateNode {
            + MeanShiftGenerateNode()
            + centeringMeanShift()
            + customCenterPoint()
            + generateNodesSpecific()
            + mutatingSpecific()
        }
      }
    }
  }
  

  MainCode.InSetData.GenerateNode.KMeansGenerateNodes -up-|> MainCode.InSetData.GenerateNode.AbstractGenerateNodes
  MainCode.InSetData.GenerateNode.KNearestNeighborGenerateNodes -up-|> MainCode.InSetData.GenerateNode.AbstractGenerateNodes
  MainCode.InSetData.GenerateNode.MeanShiftGenerateNode -up-|> MainCode.InSetData.GenerateNode.AbstractGenerateNodes


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
