@startuml

title __CLUSTERINGALGORITHM's Class Diagram__\n

  namespace MainCode {
    namespace ClusteringAlgorithm {
      abstract class MainCode.ClusteringAlgorithm.AbstractClustering {
          + FINAL_COLOR : Color
          {static} + KM_CENTRAL_NODE_RADIUS : int
          {static} + KNN_CENTRAL_NODE_RADIUS : int
          {static} + MS_CENTRAL_NODE_RADIUS : int
          {static} + MS_CIRCLE_AROUND_CENTROIDS_RADIUS : int
          {static} + NORMAL_NODE_RADIUS : int
          {static} # MAX_RUN : int
          # k : int
          # listOfNodes : ArrayList<Node>
          # st : ArrayList<SequentialTransition>
          - f : FillTransition
          - p : ParallelTransition
          + addANodeToListOfNodes()
          + addNodesToListOfNodes()
          {abstract} + addSomeNodeToListOfNode()
          + getListOfNodes()
          {abstract} + initListOfNodes()
          + overrideListOfNodes()
          + printListOfNodes()
          + removeSomeNodeInListOfNode()
          {abstract} + startSort()
          # distanceOfTwoNodes()
          # fillTransionShape()
          # initK()
          ~ colorShape()
      }
    }
  }
  

  namespace MainCode {
    namespace ClusteringAlgorithm {
      abstract class MainCode.ClusteringAlgorithm.KMAndMSGeneral {
          # centroidVisual : Circle[]
          # centroids : Node[]
          # currentXForVisual : double[]
          # currentYForVisual : double[]
          # nextXForVisual : double[]
          # nextYForVisual : double[]
          + initListOfNodes()
          {abstract} + startSort()
          # checkStopCondition()
          # drawCentroids()
          # initXYForVisual()
      }
    }
  }
  

  namespace MainCode {
    namespace ClusteringAlgorithm {
      class MainCode.ClusteringAlgorithm.KMeans {
          ~ bestClustered : List<Node>[]
          ~ clusteredNodes : List<Node>[]
          + addSomeNodeToListOfNode()
          + initListOfNodes()
          + startSort()
          # repositionCentroidsVisual()
          - addNodesToCluster()
          - clearClusteredNodes()
          - copyClusteredNodesToBestClusteredNodes()
          - hideCentroids()
          - initBestCluster()
          - initCentroids()
          - initCluster()
          - moveCentroids()
          - recolorNodeInBestCluster()
          - recolorNodeInCluster()
          - recolorNodeToBlack()
          - repositionCentroid()
          - setXYForVisualCentroids()
          - totalVariationOfCluster()
      }
    }
  }
  

  namespace MainCode {
    namespace ClusteringAlgorithm {
      class MainCode.ClusteringAlgorithm.KNearestNeighbor {
          - distance : double[]
          - lines : Line[]
          - neighbors : Node[]
          + addSomeNodeToListOfNode()
          + initListOfNodes()
          + startSort()
          - calculatingDistanceFromCentroidToNodes()
          - drawCentroids()
          - initCentroids()
          - initLines()
          - removeLines()
          - showLines()
          - voting()
      }
    }
  }
  

  namespace MainCode {
    namespace ClusteringAlgorithm {
      class MainCode.ClusteringAlgorithm.MeanShift {
          - blackList : ArrayList<double[]>
          - circleAroundCentroid : Circle[]
          - minPointArgument : int
          - nodeBelongToCircle : ArrayList<Node>[]
          - totalDistanceMoved : int[]
          + addSomeNodeToListOfNode()
          + initListOfNodes()
          + startSort()
          - getNodesBelongToCircle()
          - hideCircleForCentroids()
          - initCentroids()
          - initCircleForCentroids()
          - initTotalDistanceMoved()
          - minPointArgumentCalculate()
          - moveCentroids()
          - printTotalDistanceMoved()
          - repositionCentroids1()
          - repositionCentroids2()
          - setXYForVisualCentroids()
          - showCircleForCentroids()
      }
    }
  }
  

  MainCode.ClusteringAlgorithm.KMAndMSGeneral -up-|> MainCode.ClusteringAlgorithm.AbstractClustering
  MainCode.ClusteringAlgorithm.KMeans -up-|> MainCode.ClusteringAlgorithm.KMAndMSGeneral
  MainCode.ClusteringAlgorithm.KNearestNeighbor -up-|> MainCode.ClusteringAlgorithm.AbstractClustering
  MainCode.ClusteringAlgorithm.KNearestNeighbor o-- MainCode.InSetData.Node : centroids
  MainCode.ClusteringAlgorithm.MeanShift -up-|> MainCode.ClusteringAlgorithm.KMAndMSGeneral


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
