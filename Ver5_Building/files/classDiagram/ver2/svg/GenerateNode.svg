<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="951.25px" preserveAspectRatio="none" style="width:983px;height:951px;" version="1.1" viewBox="0 0 983 951" width="983.75px" zoomAndPan="magnify"><defs><filter height="300%" id="fxjpwrbumfqo3" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.5"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="5.0" dy="5.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="22.5" lengthAdjust="spacing" text-decoration="underline" textLength="356.25" x="305.625" y="23.3569">GENERATENODE's Class Diagram</text><text fill="#000000" font-family="sans-serif" font-size="22.5" lengthAdjust="spacing" textLength="0" x="486.875" y="51.6577"/><!--MD5=[b2031b1a8a393d7e2b81067e5168f2f9]
cluster MainCode--><polygon fill="#FFFFFF" filter="url(#fxjpwrbumfqo3)" points="20,64.1016,116.25,64.1016,125,93.6133,962.5,93.6133,962.5,874.1016,20,874.1016,20,64.1016" style="stroke:#000000;stroke-width:1.875;"/><line style="stroke:#000000;stroke-width:1.875;" x1="20" x2="125" y1="93.6133" y2="93.6133"/><text fill="#000000" font-family="sans-serif" font-size="17.5" font-weight="bold" lengthAdjust="spacing" textLength="88.75" x="25" y="84.7681">MainCode</text><!--MD5=[efacd1637c727b3c7211f21bf1598582]
cluster MainCode.InSetData--><polygon fill="#FFFFFF" filter="url(#fxjpwrbumfqo3)" points="50,119.1016,141.25,119.1016,150,148.6133,932.5,148.6133,932.5,844.1016,50,844.1016,50,119.1016" style="stroke:#000000;stroke-width:1.875;"/><line style="stroke:#000000;stroke-width:1.875;" x1="50" x2="150" y1="148.6133" y2="148.6133"/><text fill="#000000" font-family="sans-serif" font-size="17.5" font-weight="bold" lengthAdjust="spacing" textLength="83.75" x="55" y="139.7681">InSetData</text><!--MD5=[9ed48392bc820af335585fb1156492ea]
cluster MainCode.InSetData.GenerateNode--><polygon fill="#FFFFFF" filter="url(#fxjpwrbumfqo3)" points="80,174.1016,216.25,174.1016,225,203.6133,902.5,203.6133,902.5,814.1016,80,814.1016,80,174.1016" style="stroke:#000000;stroke-width:1.875;"/><line style="stroke:#000000;stroke-width:1.875;" x1="80" x2="225" y1="203.6133" y2="203.6133"/><text fill="#000000" font-family="sans-serif" font-size="17.5" font-weight="bold" lengthAdjust="spacing" textLength="128.75" x="85" y="194.7681">GenerateNode</text><!--MD5=[9423c954acc0352f99e5505f6cdd5964]
class MainCode.InSetData.GenerateNode.AbstractGenerateNodes--><rect codeLine="7" fill="#FEFECE" filter="url(#fxjpwrbumfqo3)" height="336.7188" id="MainCode.InSetData.GenerateNode.AbstractGenerateNodes" style="stroke:#A80036;stroke-width:1.875;" width="250" x="428.75" y="219.1016"/><ellipse cx="467.75" cy="239.1016" fill="#A9DCDF" rx="13.75" ry="13.75" style="stroke:#A80036;stroke-width:1.25;"/><path d="M469.9375,240.9766 L465.8164,240.9766 L465.2695,242.2266 L465.2695,242.2266 L465.8555,242.2266 L466.5,243.0078 L466.5,243.4766 L466.5,243.9453 L465.8555,244.7266 L465.2695,244.7266 L462.9063,244.7266 L462.1445,244.7266 L461.5,243.9453 L461.5,243.4766 L461.5,243.0078 L462.1445,242.2266 L462.9063,242.2266 L465.7969,234.7266 L464.7031,234.7266 L463.3945,234.7266 L462.75,233.9453 L462.75,233.4766 L462.75,233.0078 L463.3945,232.2266 L464.7031,232.2266 L469.293,232.2266 L472.6523,242.2266 L473.3555,242.2266 L473.3555,242.2266 L474,243.0078 L474,243.4766 L474,243.9453 L473.3555,244.7266 L472.6523,244.7266 L470.2891,244.7266 L469.6445,244.7266 L469,243.9453 L469,243.4766 L469,243.0078 L469.6445,242.2266 L470.2891,242.2266 L470.2891,242.2266 L469.9375,240.9766 Z M469.2539,238.4766 L467.75,234.0039 L466.4609,238.4766 L469.2539,238.4766 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="15" font-style="italic" lengthAdjust="spacing" textLength="165" x="489.75" y="245.2393">AbstractGenerateNodes</text><line style="stroke:#A80036;stroke-width:1.875;" x1="430" x2="677.5" y1="259.1016" y2="259.1016"/><ellipse cx="442.5" cy="272.8516" fill="none" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" text-decoration="underline" textLength="70" x="453.75" y="278.3752">MAX_X : int</text><ellipse cx="442.5" cy="290.1465" fill="none" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" text-decoration="underline" textLength="71.25" x="453.75" y="295.6702">MAX_Y : int</text><polygon fill="none" points="442.5,302.4414,437.5,309.9414,447.5,309.9414" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="92.5" x="453.75" y="312.9651">centerPoint : int</text><polygon fill="none" points="442.5,319.7363,437.5,327.2363,447.5,327.2363" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="217.5" x="453.75" y="330.26">customCenterArea : ArrayList&lt;int[]&gt;</text><polygon fill="none" points="442.5,337.0313,437.5,344.5313,447.5,344.5313" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="147.5" x="453.75" y="347.5549">mutatingPercent : double</text><polygon fill="none" points="442.5,354.3262,437.5,361.8262,447.5,361.8262" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="120" x="453.75" y="364.8499">nodesTemp : Node[]</text><polygon fill="none" points="442.5,371.6211,437.5,379.1211,447.5,379.1211" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="181.25" x="453.75" y="382.1448">numNodeForEachCluster : int[]</text><polygon fill="none" points="442.5,388.916,437.5,396.416,447.5,396.416" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="70" x="453.75" y="399.4397">number : int</text><polygon fill="none" points="442.5,406.2109,437.5,413.7109,447.5,413.7109" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="150" x="453.75" y="416.7346">optionForCenterPoint : int</text><polygon fill="none" points="442.5,423.5059,437.5,431.0059,447.5,431.0059" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="88.75" x="453.75" y="434.0295">radius : double</text><line style="stroke:#A80036;stroke-width:1.875;" x1="430" x2="677.5" y1="442.0508" y2="442.0508"/><ellipse cx="442.5" cy="455.8008" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" font-style="italic" lengthAdjust="spacing" textLength="127.5" x="453.75" y="461.3245">customCenterPoint()</text><ellipse cx="442.5" cy="473.0957" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" font-style="italic" lengthAdjust="spacing" textLength="153.75" x="453.75" y="478.6194">generateNodesSpecific()</text><ellipse cx="442.5" cy="490.3906" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="120" x="453.75" y="495.9143">generateOneNode()</text><ellipse cx="442.5" cy="507.6855" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="185" x="453.75" y="513.2092">getNodeFromGenerateNodes()</text><ellipse cx="442.5" cy="524.9805" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="102.5" x="453.75" y="530.5042">mutatingDefault()</text><ellipse cx="442.5" cy="542.2754" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" font-style="italic" lengthAdjust="spacing" textLength="112.5" x="453.75" y="547.7991">mutatingSpecific()</text><!--MD5=[16358d0dedcadad7fadb2c867d7f8d3e]
class MainCode.InSetData.GenerateNode.GenerateCentroids--><rect codeLine="33" fill="#FEFECE" filter="url(#fxjpwrbumfqo3)" height="232.9492" id="MainCode.InSetData.GenerateNode.GenerateCentroids" style="stroke:#A80036;stroke-width:1.875;" width="283.75" x="100.625" y="270.9766"/><ellipse cx="171.5625" cy="290.9766" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke:#A80036;stroke-width:1.25;"/><path d="M174.0625,286.6016 Q174.3164,285.9766 174.6094,285.6641 Q174.9023,285.3516 175.2344,285.3516 Q175.8203,285.3516 176.1914,285.7031 Q176.5625,286.0547 176.5625,286.875 L176.5625,288.8281 Q176.5625,289.6484 176.2109,290 Q175.8594,290.3516 175.3125,290.3516 Q174.8242,290.3516 174.5117,290.1367 Q174.1992,289.9219 174.0625,289.3555 Q174.0039,288.9648 173.7891,288.75 Q173.3984,288.3398 172.6953,288.1055 Q171.9922,287.8516 171.2891,287.8516 Q170.4102,287.8516 169.668,288.2031 Q168.9453,288.5547 168.3789,289.3359 Q167.8125,290.1172 167.8125,291.1914 L167.8125,292.3438 Q167.8125,293.6328 168.8672,294.4922 Q169.9219,295.3516 171.7969,295.3516 Q172.9102,295.3516 173.6914,295.0977 Q174.1406,294.9609 174.6484,294.5117 Q174.9805,294.2578 175.1563,294.1797 Q175.332,294.1016 175.5469,294.1016 Q175.957,294.1016 176.25,294.4336 Q176.5625,294.7461 176.5625,295.1953 Q176.5625,295.625 176.1328,296.1328 Q175.5078,296.875 174.5117,297.2852 Q173.2031,297.8516 171.6016,297.8516 Q169.7266,297.8516 168.2227,297.1094 Q167.0117,296.5234 166.1523,295.2539 Q165.3125,293.9844 165.3125,292.4805 L165.3125,291.1133 Q165.3125,289.5508 166.0547,288.1836 Q166.8164,286.8164 168.125,286.0938 Q169.4531,285.3516 170.9375,285.3516 Q171.8359,285.3516 172.6172,285.6641 Q173.3984,285.9766 174.0625,286.6016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacing" textLength="131.25" x="197.1875" y="297.1143">GenerateCentroids</text><line style="stroke:#A80036;stroke-width:1.875;" x1="101.875" x2="383.125" y1="310.9766" y2="310.9766"/><ellipse cx="114.375" cy="324.7266" fill="none" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" text-decoration="underline" textLength="70" x="125.625" y="330.2502">MAX_X : int</text><ellipse cx="114.375" cy="342.0215" fill="none" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" text-decoration="underline" textLength="71.25" x="125.625" y="347.5452">MAX_Y : int</text><polygon fill="none" points="114.375,354.3164,109.375,361.8164,119.375,361.8164" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="120" x="125.625" y="364.8401">nodesTemp : Node[]</text><polygon fill="none" points="114.375,371.6113,109.375,379.1113,119.375,379.1113" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="70" x="125.625" y="382.135">number : int</text><polygon fill="none" points="114.375,388.9063,109.375,396.4063,119.375,396.4063" style="stroke:#1963A0;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="88.75" x="125.625" y="399.4299">radius : double</text><line style="stroke:#A80036;stroke-width:1.875;" x1="101.875" x2="383.125" y1="407.4512" y2="407.4512"/><ellipse cx="114.375" cy="421.2012" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="123.75" x="125.625" y="426.7249">GenerateCentroids()</text><ellipse cx="114.375" cy="438.4961" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="190" x="125.625" y="444.0198">generateCentroidsForKMeans()</text><ellipse cx="114.375" cy="455.791" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="251.25" x="125.625" y="461.3147">generateCentroidsForKNearestNeighbor()</text><ellipse cx="114.375" cy="473.0859" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="201.25" x="125.625" y="478.6096">generateCentroidsForMeanShift()</text><ellipse cx="114.375" cy="490.3809" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="86.25" x="125.625" y="495.9045">getCentroids()</text><!--MD5=[af44ba6cb90bbe2c3c4c9364bed78c04]
class MainCode.InSetData.GenerateNode.KMeansGenerateNodes--><rect codeLine="53" fill="#FEFECE" filter="url(#fxjpwrbumfqo3)" height="129.1797" id="MainCode.InSetData.GenerateNode.KMeansGenerateNodes" style="stroke:#A80036;stroke-width:1.875;" width="206.25" x="100.625" y="647.8516"/><ellipse cx="119.375" cy="667.8516" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke:#A80036;stroke-width:1.25;"/><path d="M121.875,663.4766 Q122.1289,662.8516 122.4219,662.5391 Q122.7148,662.2266 123.0469,662.2266 Q123.6328,662.2266 124.0039,662.5781 Q124.375,662.9297 124.375,663.75 L124.375,665.7031 Q124.375,666.5234 124.0234,666.875 Q123.6719,667.2266 123.125,667.2266 Q122.6367,667.2266 122.3242,667.0117 Q122.0117,666.7969 121.875,666.2305 Q121.8164,665.8398 121.6016,665.625 Q121.2109,665.2148 120.5078,664.9805 Q119.8047,664.7266 119.1016,664.7266 Q118.2227,664.7266 117.4805,665.0781 Q116.7578,665.4297 116.1914,666.2109 Q115.625,666.9922 115.625,668.0664 L115.625,669.2188 Q115.625,670.5078 116.6797,671.3672 Q117.7344,672.2266 119.6094,672.2266 Q120.7227,672.2266 121.5039,671.9727 Q121.9531,671.8359 122.4609,671.3867 Q122.793,671.1328 122.9688,671.0547 Q123.1445,670.9766 123.3594,670.9766 Q123.7695,670.9766 124.0625,671.3086 Q124.375,671.6211 124.375,672.0703 Q124.375,672.5 123.9453,673.0078 Q123.3203,673.75 122.3242,674.1602 Q121.0156,674.7266 119.4141,674.7266 Q117.5391,674.7266 116.0352,673.9844 Q114.8242,673.3984 113.9648,672.1289 Q113.125,670.8594 113.125,669.3555 L113.125,667.9883 Q113.125,666.4258 113.8672,665.0586 Q114.6289,663.6914 115.9375,662.9688 Q117.2656,662.2266 118.75,662.2266 Q119.6484,662.2266 120.4297,662.5391 Q121.2109,662.8516 121.875,663.4766 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacing" textLength="166.25" x="136.875" y="673.9893">KMeansGenerateNodes</text><line style="stroke:#A80036;stroke-width:1.875;" x1="101.875" x2="305.625" y1="687.8516" y2="687.8516"/><line style="stroke:#A80036;stroke-width:1.875;" x1="101.875" x2="305.625" y1="697.8516" y2="697.8516"/><ellipse cx="114.375" cy="711.6016" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="153.75" x="125.625" y="717.1252">KMeansGenerateNodes()</text><ellipse cx="114.375" cy="728.8965" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="122.5" x="125.625" y="734.4202">customCenterPoint()</text><ellipse cx="114.375" cy="746.1914" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="151.25" x="125.625" y="751.7151">generateNodesSpecific()</text><ellipse cx="114.375" cy="763.4863" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="108.75" x="125.625" y="769.01">mutatingSpecific()</text><!--MD5=[7a2836406f5079981422e133d4a01423]
class MainCode.InSetData.GenerateNode.KNearestNeighborGenerateNodes--><rect codeLine="67" fill="#FEFECE" filter="url(#fxjpwrbumfqo3)" height="163.7695" id="MainCode.InSetData.GenerateNode.KNearestNeighborGenerateNodes" style="stroke:#A80036;stroke-width:1.875;" width="278.75" x="350.625" y="630.3516"/><ellipse cx="369.375" cy="650.3516" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke:#A80036;stroke-width:1.25;"/><path d="M371.875,645.9766 Q372.1289,645.3516 372.4219,645.0391 Q372.7148,644.7266 373.0469,644.7266 Q373.6328,644.7266 374.0039,645.0781 Q374.375,645.4297 374.375,646.25 L374.375,648.2031 Q374.375,649.0234 374.0234,649.375 Q373.6719,649.7266 373.125,649.7266 Q372.6367,649.7266 372.3242,649.5117 Q372.0117,649.2969 371.875,648.7305 Q371.8164,648.3398 371.6016,648.125 Q371.2109,647.7148 370.5078,647.4805 Q369.8047,647.2266 369.1016,647.2266 Q368.2227,647.2266 367.4805,647.5781 Q366.7578,647.9297 366.1914,648.7109 Q365.625,649.4922 365.625,650.5664 L365.625,651.7188 Q365.625,653.0078 366.6797,653.8672 Q367.7344,654.7266 369.6094,654.7266 Q370.7227,654.7266 371.5039,654.4727 Q371.9531,654.3359 372.4609,653.8867 Q372.793,653.6328 372.9688,653.5547 Q373.1445,653.4766 373.3594,653.4766 Q373.7695,653.4766 374.0625,653.8086 Q374.375,654.1211 374.375,654.5703 Q374.375,655 373.9453,655.5078 Q373.3203,656.25 372.3242,656.6602 Q371.0156,657.2266 369.4141,657.2266 Q367.5391,657.2266 366.0352,656.4844 Q364.8242,655.8984 363.9648,654.6289 Q363.125,653.3594 363.125,651.8555 L363.125,650.4883 Q363.125,648.9258 363.8672,647.5586 Q364.6289,646.1914 365.9375,645.4688 Q367.2656,644.7266 368.75,644.7266 Q369.6484,644.7266 370.4297,645.0391 Q371.2109,645.3516 371.875,645.9766 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacing" textLength="238.75" x="386.875" y="656.4893">KNearestNeighborGenerateNodes</text><line style="stroke:#A80036;stroke-width:1.875;" x1="351.875" x2="628.125" y1="670.3516" y2="670.3516"/><ellipse cx="364.375" cy="684.1016" fill="none" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="138.75" x="375.625" y="689.6252">colorForNodes : Color[]</text><line style="stroke:#A80036;stroke-width:1.875;" x1="351.875" x2="628.125" y1="697.6465" y2="697.6465"/><ellipse cx="364.375" cy="711.3965" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="215" x="375.625" y="716.9202">KNearestNeighborGenerateNodes()</text><ellipse cx="364.375" cy="728.6914" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="122.5" x="375.625" y="734.2151">customCenterPoint()</text><ellipse cx="364.375" cy="745.9863" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="157.5" x="375.625" y="751.51">generateColorForCluster()</text><ellipse cx="364.375" cy="763.2813" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="151.25" x="375.625" y="768.8049">generateNodesSpecific()</text><ellipse cx="364.375" cy="780.5762" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="108.75" x="375.625" y="786.0999">mutatingSpecific()</text><!--MD5=[53849dcf9ec6fdaca7e24223f05055d7]
class MainCode.InSetData.GenerateNode.MeanShiftGenerateNode--><rect codeLine="83" fill="#FEFECE" filter="url(#fxjpwrbumfqo3)" height="146.4746" id="MainCode.InSetData.GenerateNode.MeanShiftGenerateNode" style="stroke:#A80036;stroke-width:1.875;" width="208.75" x="673.125" y="639.1016"/><ellipse cx="691.875" cy="659.1016" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke:#A80036;stroke-width:1.25;"/><path d="M694.375,654.7266 Q694.6289,654.1016 694.9219,653.7891 Q695.2148,653.4766 695.5469,653.4766 Q696.1328,653.4766 696.5039,653.8281 Q696.875,654.1797 696.875,655 L696.875,656.9531 Q696.875,657.7734 696.5234,658.125 Q696.1719,658.4766 695.625,658.4766 Q695.1367,658.4766 694.8242,658.2617 Q694.5117,658.0469 694.375,657.4805 Q694.3164,657.0898 694.1016,656.875 Q693.7109,656.4648 693.0078,656.2305 Q692.3047,655.9766 691.6016,655.9766 Q690.7227,655.9766 689.9805,656.3281 Q689.2578,656.6797 688.6914,657.4609 Q688.125,658.2422 688.125,659.3164 L688.125,660.4688 Q688.125,661.7578 689.1797,662.6172 Q690.2344,663.4766 692.1094,663.4766 Q693.2227,663.4766 694.0039,663.2227 Q694.4531,663.0859 694.9609,662.6367 Q695.293,662.3828 695.4688,662.3047 Q695.6445,662.2266 695.8594,662.2266 Q696.2695,662.2266 696.5625,662.5586 Q696.875,662.8711 696.875,663.3203 Q696.875,663.75 696.4453,664.2578 Q695.8203,665 694.8242,665.4102 Q693.5156,665.9766 691.9141,665.9766 Q690.0391,665.9766 688.5352,665.2344 Q687.3242,664.6484 686.4648,663.3789 Q685.625,662.1094 685.625,660.6055 L685.625,659.2383 Q685.625,657.6758 686.3672,656.3086 Q687.1289,654.9414 688.4375,654.2188 Q689.7656,653.4766 691.25,653.4766 Q692.1484,653.4766 692.9297,653.7891 Q693.7109,654.1016 694.375,654.7266 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacing" textLength="168.75" x="709.375" y="665.2393">MeanShiftGenerateNode</text><line style="stroke:#A80036;stroke-width:1.875;" x1="674.375" x2="880.625" y1="679.1016" y2="679.1016"/><line style="stroke:#A80036;stroke-width:1.875;" x1="674.375" x2="880.625" y1="689.1016" y2="689.1016"/><ellipse cx="686.875" cy="702.8516" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="157.5" x="698.125" y="708.3752">MeanShiftGenerateNode()</text><ellipse cx="686.875" cy="720.1465" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="126.25" x="698.125" y="725.6702">centeringMeanShift()</text><ellipse cx="686.875" cy="737.4414" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="122.5" x="698.125" y="742.9651">customCenterPoint()</text><ellipse cx="686.875" cy="754.7363" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="151.25" x="698.125" y="760.26">generateNodesSpecific()</text><ellipse cx="686.875" cy="772.0313" fill="#84BE84" rx="3.75" ry="3.75" style="stroke:#038048;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacing" textLength="108.75" x="698.125" y="777.5549">mutatingSpecific()</text><!--MD5=[b7c18e42304f5731d9e5ad31a7922411]
reverse link MainCode.InSetData.GenerateNode.AbstractGenerateNodes to MainCode.InSetData.GenerateNode.KMeansGenerateNodes--><path codeLine="95" d="M410.8125,551.0516 C409.3,552.5016 407.775,553.9266 406.25,555.3516 C371.25,588.0266 329.7375,620.8391 293.4375,647.8391 " fill="none" id="MainCode.InSetData.GenerateNode.AbstractGenerateNodes-backto-MainCode.InSetData.GenerateNode.KMeansGenerateNodes" style="stroke:#A80036;stroke-width:1.25;"/><polygon fill="none" points="404.75,544.7516,428.725,533.5016,417,557.2516,404.75,544.7516" style="stroke:#A80036;stroke-width:1.25;"/><!--MD5=[00ecf69d0eec2bff072d6b747bd6030a]
reverse link MainCode.InSetData.GenerateNode.AbstractGenerateNodes to MainCode.InSetData.GenerateNode.KNearestNeighborGenerateNodes--><path codeLine="96" d="M515.85,580.2016 C512.4125,597.5891 509.075,614.4766 506,630.0266 " fill="none" id="MainCode.InSetData.GenerateNode.AbstractGenerateNodes-backto-MainCode.InSetData.GenerateNode.KNearestNeighborGenerateNodes" style="stroke:#A80036;stroke-width:1.25;"/><polygon fill="none" points="507.325,578.2266,520.75,555.3891,524.4875,581.6141,507.325,578.2266" style="stroke:#A80036;stroke-width:1.25;"/><!--MD5=[62c579503cf9db25335a2aafecad1765]
reverse link MainCode.InSetData.GenerateNode.AbstractGenerateNodes to MainCode.InSetData.GenerateNode.MeanShiftGenerateNode--><path codeLine="97" d="M683.8125,575.9391 C699.2375,598.1641 714.175,619.7016 727.4375,638.8141 " fill="none" id="MainCode.InSetData.GenerateNode.AbstractGenerateNodes-backto-MainCode.InSetData.GenerateNode.MeanShiftGenerateNode" style="stroke:#A80036;stroke-width:1.25;"/><polygon fill="none" points="676.625,580.9266,669.5625,555.3891,691,570.9516,676.625,580.9266" style="stroke:#A80036;stroke-width:1.25;"/><text fill="#888888" font-family="sans-serif" font-size="12.5" lengthAdjust="spacing" textLength="0" x="967.5" y="894.5776"/><text fill="#888888" font-family="sans-serif" font-size="12.5" lengthAdjust="spacing" textLength="0" x="967.5" y="910.3003"/><text fill="#888888" font-family="sans-serif" font-size="12.5" lengthAdjust="spacing" textLength="490" x="477.5" y="926.0229">PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)</text><text fill="#888888" font-family="sans-serif" font-size="12.5" lengthAdjust="spacing" textLength="492.5" x="475" y="941.7456">For more information about this tool, please contact philippe.mesmeur@gmail.com</text><!--MD5=[bf0eed5df67ece31dc0eb862ba7034ab]
@startuml

title __GENERATENODE's Class Diagram__\n

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        abstract class MainCode.InSetData.GenerateNode.AbstractGenerateNodes {
            {static} + MAX_X : int
            {static} + MAX_Y : int
            ~ centerPoint : int
            ~ customCenterArea : ArrayList<int[]>
            ~ mutatingPercent : double
            ~ nodesTemp : Node[]
            ~ numNodeForEachCluster : int[]
            ~ number : int
            ~ optionForCenterPoint : int
            ~ radius : double
            {abstract} + customCenterPoint()
            {abstract} + generateNodesSpecific()
            + generateOneNode()
            + getNodeFromGenerateNodes()
            + mutatingDefault()
            {abstract} + mutatingSpecific()
        }
      }
    }
  }
  

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        class MainCode.InSetData.GenerateNode.GenerateCentroids {
            {static} + MAX_X : int
            {static} + MAX_Y : int
            ~ nodesTemp : Node[]
            ~ number : int
            ~ radius : double
            + GenerateCentroids()
            + generateCentroidsForKMeans()
            + generateCentroidsForKNearestNeighbor()
            + generateCentroidsForMeanShift()
            + getCentroids()
        }
      }
    }
  }
  

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        class MainCode.InSetData.GenerateNode.KMeansGenerateNodes {
            + KMeansGenerateNodes()
            + customCenterPoint()
            + generateNodesSpecific()
            + mutatingSpecific()
        }
      }
    }
  }
  

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        class MainCode.InSetData.GenerateNode.KNearestNeighborGenerateNodes {
            + colorForNodes : Color[]
            + KNearestNeighborGenerateNodes()
            + customCenterPoint()
            + generateColorForCluster()
            + generateNodesSpecific()
            + mutatingSpecific()
        }
      }
    }
  }
  

  namespace MainCode {
    namespace InSetData {
      namespace GenerateNode {
        class MainCode.InSetData.GenerateNode.MeanShiftGenerateNode {
            + MeanShiftGenerateNode()
            + centeringMeanShift()
            + customCenterPoint()
            + generateNodesSpecific()
            + mutatingSpecific()
        }
      }
    }
  }
  

  MainCode.InSetData.GenerateNode.KMeansGenerateNodes -up-|> MainCode.InSetData.GenerateNode.AbstractGenerateNodes
  MainCode.InSetData.GenerateNode.KNearestNeighborGenerateNodes -up-|> MainCode.InSetData.GenerateNode.AbstractGenerateNodes
  MainCode.InSetData.GenerateNode.MeanShiftGenerateNode -up-|> MainCode.InSetData.GenerateNode.AbstractGenerateNodes


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml

PlantUML version 1.2021.00(Sun Jan 10 17:25:05 ICT 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>